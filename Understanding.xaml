<Window x:Class="HardwareEngineeringLab4_.Understanding"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HardwareEngineeringLab4_"
        mc:Ignorable="d"
        Title="Understanding" Height="712.286" Width="774.286">
    <Grid>
        <Grid.Background>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="Black" Offset="0"/>
                <GradientStop Color="{DynamicResource {x:Static SystemColors.ActiveCaptionColorKey}}" Offset="1"/>
            </LinearGradientBrush>
        </Grid.Background>
        <RichTextBox HorizontalAlignment="Left" Height="649" Margin="6,6,0,-236" VerticalAlignment="Top" Width="736" TextChanged="RichTextBox_TextChanged" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible" ScrollViewer.CanContentScroll="True">
            <FlowDocument>
                <Paragraph>
                    <Run FontWeight="Bold" Text="Virtex 4 BLOCK RAM : "/>
                    <Run Text=" "/>
                    <Run Text="Each block RAM stores 18k of data. Write and Read are synchronous operations, the two ports are symmetrical and totally independent sharing only the stored data. Each port can be configured in any aspect ratio and the two ports are independent.  Each block RAM contains additional control circuitry to operate as a built in multi rate FIFO memory.  Embedded dual or single port RAM modules, ROM modules synchronous FIFOs and data width converters are easily implemented using the Xilinx CORE generator block memory modules."/>
                </Paragraph>
                <Paragraph>
                    <Run FontWeight="Bold" Text="Configurable Logic Block: "/>
                    <Run Text=" "/>
                    <Run Text="The configurable logic block (CLBs) are the  main logic resource for implementing combinatorial as well as sequential logic. Each CLB element is connected to a switch matrix to access the general routing matrix. A CLB element contains four interconnected slices. These slices are grouped into pairs and each pair is organized as a column. The logic resources for one CLB consists of 4 slices, 8 Look up tables, 8 multi-ands, 2 arithmetic and carry chains, distributed RAMs and shift registers, 64 bit distributed RAM and 64 bit shift registers. The function generators and multiplexers can implement 4:1 multiplexer in one slice or a 16:1 multiplexer in once CLB element ( 4 slices). The CLB/Slice timing models : A thorough understanding of the timing associated with the various paths and functional elements is required to execute large size and complex designs on the software platform. The timing model section consists of functional element diagram, timing parameters and timing diagram"/>
                </Paragraph>
                <Paragraph>
                    <Run FontWeight="Bold" Text="Select IO Resources:  "/>
                    <Run Text=" "/>
                    <Run Text="A good understanding of the electrical behavior of the output drivers, input receivers, input and output data registers and their double data rate operation, the programmable input delay and serializer/ deserializer (SERDES) is required to effectively implement designs. The digitally controlled impedance (DCI) functionality adjusts the output impedance or input termination to accurately match the characteristic impedance of the transmission line. DCI actively adjusts the impedance of the I/O to equal an external reference resistance. This compensates for change in I/O due to process variation. DCI provides the parallel or series termination for transmitters and receivers. This eliminates the requirement for termination resistors on the board hence reducing stub reflections. The input delay element allows incoming signals to be delayed on an individual basis , the delay element is calibrated to provide an absolute delay value independent of process, voltage and temperature variation. The three modes of operation are:  Zero hold time delay mode, fixed delay mode and variable delay model."/>
                </Paragraph>
                <Paragraph>
                    <Run FontWeight="Bold" Text="Input Serial To Parallel Logic Resources (ISERDES): "/>
                    <Run Text=" "/>
                    <Run Text="The virtex -4 ISERDES is a dedicated serial to parallel converter with specific clocking and logic features designed to facilitate the implementation of high speed source-synchronous applications. ISERDES includes a dedicated Deserializer/Serial to Parallel Converter and the digitally controlled delay element."/>
                </Paragraph>
                <Paragraph>
                    <Run FontWeight="Bold" Text="System Monitor:  "/>
                    <Run Text=" "/>
                    <Run Text="The system monitor consists of a 10bit analog to digital converter which gets combined with a number of analog onboard or on chip sensors. It can measure the physical operating parameters including on chip power supply voltages and die temperature.  The system monitor includes an on chip temperature sensor and an on-chip power supply sensor. "/>
                </Paragraph>
                <Paragraph>
                    <Run FontWeight="Bold" Text="XtremeDSP design : "/>
                    <Run Text=" "/>
                    <Run Text="The digital signal processing (DSP) element delivers off the shelf programmable devices with the best mix of logic memory, I/O, processors, clock management and digital signal processing. It includes multiplier, multiplier accumulator, multiplier with an adder, three input adder, barrel shifter, wide bus multiplexer, magnitude comparator and wide counter. The architecture also supports multiple DSP48 slices to form wide math functions and DSP filters.   The multi channel finite impulse response filters are used to filter multiple data streams of input signals using the same set of coefficients for all channels or different coefficients for different channels."/>
                </Paragraph>
                <Paragraph>
                    <Run FontWeight="Bold" Text="Configuration Overview: "/>
                    <Run Text=" "/>
                    <Run Text="It is configured by loading application specific configuration data into the bitstream and into internal memory, since the memory is volatile it must be configured every time it is powered up. The configuration pins support various configuration modes including master-serial / slave - serial / master selectMAP , slave selectMAP configuration mode in addition to the JTAG / Boundary scan configuration mode."/>
                </Paragraph>
                <Paragraph>
                    <Run/>
                </Paragraph>
            </FlowDocument>
        </RichTextBox>

    </Grid>
</Window>
